windows 22-09-15

settings + tools + management console

most home users use the settings interface in the start menu

start menu
-user settings
-power
-program list
-tiles pinned
-search bar (includes local and web results)

alt+tab cycles through active windows

task menu
-bottom bar

system tray / notification area
-can pin or unpin items
-background systems
-clock
-drivers

settings menu
-system: shows the stats of the virtual machine when used on the vm
  -also shows what version of windows is installed
-devices + device configuration (peripherals)
-windows phone: dont
-xbox: dont
-network: internet settings &etc
-account: not your windows profile, your microsoft account
-privacy: what apps can access what hardware/accounts
-update and security: big for this course
  -shows your activation status

-kms is not cloud, its stored on a local server

-control panel and settings are not the same, but they overlap a lot
-control panel is less user friendly and more useful

windows key +R : run menu

>"control" to bring up control panel
>view by "large icons" to see more tools
>"administrative tools" can be accessed through control panel
   -or via programs > windows administrative tools

MMC: microsoft management console
  -graphical interface for admin tools
  -can load in only some admin tools
  -can save the way its configured and lock it for some users
  -can be accessed through programs or through run command
  -will ask to be run as admin
  -additions are called snap-ins
  -"add or remove snap-ins"
  -lists all possible snap-ins
  -do you want to add this snap-in for this machine or a different machine on the network
  -snap-ins contain context-specific info and actions
  -context menu: displays actions within a snapin
  -a snap-in is the same as the tool in control panel

VHD: virtual harddrive

run as admin
-requests user/pass from nonadmin users
-verifies you want to run things that could alter your machine or ruin it

service: background software that doesn't require user interaction
-also display in task manager as background processes
-all software is processes, includes apps and services
-service properties tells you about the services

system32: contains system processes

print spooler is always listening for things that want to be printed
-renders and queues print jobs

power shell: be aware

-delayed start: background processes start a bit after log in
-auto: start on log in
-manual: start when called

local system account: can start background processes before any user logs in

service properties also lets you tell it how to act when it fails

dependencies: fax depends on print spooler etc
-some services only work when other services are running

dont need to know a whole lot about services in this stream

drivers: software that communicates between hardware and your OS
-make it so that apps dont need to compensate for every possible model of every possible device/component

-update/remove/rollback drivers is a large part of windows admin

device manager is found under control panel
windows has default drivers
driver properties shows events, including failures

digital signer: verifies that a driver passed through whql and has not been modified
whql: windows hardware quality labs
weird niche products sometimes dont have this, you will get a warning but can still install
  -cant verify publisher
  -this has been altered

ribbon: bar at the top of a program with all the commands

file explorer ribbon > view > options
-show hidden files
-show file extensions

user preferences are stored as app data, are not global

task scheduler
-run commands & scripts automatically on a schedule
  -windows updates can be done a different way, but that general idea
-can be accessed through mmc or through admin tools
-trigger: what makes it happen
-action: what happens (start a program, send an email, etc). can have more than one
-can add arguments
-conditions: only run if (condition) (example: if its idle, if its plugged in, if its on a certain network)
-settings: allow to run on demand, other misc

we will need to use mmc snapins for the assignment
-use built-in system account

command prompt (cmd.exe) or power shell
-both allow you to run commands, for example:

ping: tests connection between your machine and a different ip address
tracert: shows the path from your ip to another ip
ICACLS: permissions
ipconfig: shows your ip
net: create users
cd: change directory
mkdir: make directory

power shell, use for command prompts and scripts
-commands are formatted "verb-noun"
-simplified and more intuitive than command prompt
-able to manage almost everything
-it is expected youll use this instead of GUI to configure servers
-multiple environments
-power shell has more functionality than command prompt

generic kms keys for every windows version
-the key asks to find the server where liscencing is
-it is not a unique key for every lisence